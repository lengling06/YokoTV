name: 极速 Docker 构建

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker 标签'
        required: false
        default: 'latest'
        type: string
  push:
    branches: [main, master]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/workflows/**'
      - '!.github/workflows/docker-build-fast.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

env:
  # 禁用 Next.js 遥测
  NEXT_TELEMETRY_DISABLED: 1
  # Docker 层缓存配置
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # 浅克隆加速
          fetch-depth: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          # 使用 docker-container 驱动以获得更好的缓存
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/lengling06/yokotv
          tags: |
            type=raw,value=${{ github.event.inputs.tag || 'latest' }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          # 只构建 amd64 架构
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # 多级缓存策略
          cache-from: |
            type=gha
            type=registry,ref=ghcr.io/lengling06/yokotv:buildcache
          cache-to: |
            type=gha,mode=max
            type=registry,ref=ghcr.io/lengling06/yokotv:buildcache,mode=max
          # 构建参数优化
          build-args: |
            NEXT_TELEMETRY_DISABLED=1
            NODE_ENV=production
